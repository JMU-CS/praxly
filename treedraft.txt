steps to adding a block

1. define the object for the executable (milestone 1 type stuff)
2. finish the walk through the json in m1 module
3. edit the lexer in milestone2 to make sure that the text will tokenize properly
4. edit the parser so that it will package correctly into the tree
**DO NOT PROCEED UNTIL THE TEXT RUNS**
5. define the block and render it in the toolbox
6. define the generator
** MAKE SURE BLOCKS WORK BEFORE PROCEEDING**
7. update tree2blocks for block generation from text
8. update tree2text for text generation from blocks
** TEST FOR EVERY POSSIBILITY YOU CAN THINK OF **



location {

    startIndex, 
    endIndex, 
    blockID
}


TODO: 

reorganize toolbox
for loops



environment {

    variableList: {}, 
    functionlist: {}, 




}


function definitions: 

int functionname (params) {

    codeblock here
}

when we see a function declaration: 
make a new scope, which is a copy of the old environment



when seeing a function call: 

take in the environment
take the scope for the function and append it to a copy of the environment


functionName: {
    params: 
    code: 
    
}