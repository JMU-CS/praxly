Test Name,Program Code,Expected Output,Expected Error
array initialize,"// first, initialize the array
int[] a ⟵ {5, 9, 2, 10, 15};

// Then, print a value from it
print a[0];",5,
array index var,"int pos ⟵ 2
int[] a ⟵ {5, 9, 8, 10, 15};

print a[pos]",8,
array index sum,"int[] a ⟵ {5, 9, 8, 10};
int sum ⟵ a[0] + a[3] + a[2];
print sum;",23,
array modify one,"int[] a ⟵ {5, 9, 2, 10, 15};

print a[0];
a[0] ⟵ 20;
print a[0];","5
20",
array modify few,"int[] a ⟵ {5, 9, 2, 10};

a[0] ⟵ a[0] * 3;
a[1] ⟵ (a[0] + 5) / 2;
a[3] ⟵ a[0]

print a","{15, 10, 2, 15}",
while array x12,"float[] heights ⟵ {5.8, 4.9, 6.3, 5.2, 5.7};

int count ⟵ 0;
while (count < 5)
    heights[count] ⟵ heights[count] * 12;
    count ⟵ count + 1;
end while

print heights","{69.6, 58.800000000000004, 75.6, 62.400000000000006, 68.4}",
while 10 print,"int counter ⟵ 0;
while ( counter < 10 )
    print counter;
    counter ⟵ counter + 1;
end while","0
1
2
3
4
5
6
7
8
9",
for 10 print,"for ( int i ⟵ 0; i < 10; i ⟵ i + 1 )
    print i;
end for","0
1
2
3
4
5
6
7
8
9",
for array *12,"float[] heights ⟵ {5.8, 4.9, 6.3, 5.2, 5.7};

for (int count ⟵ 0; count < 5; count ⟵ count + 1)
    heights[count] ⟵ heights[count] * 12;
end for

print heights","{69.6, 58.800000000000004, 75.6, 62.400000000000006, 68.4}",
for scores avg,"float[] scores ⟵ {75.0, 80.0, 40.0, 98.5, 100.0};

float avg ⟵ 0;

for (int i ⟵ 0; i < 5; i ⟵ i + 1)
    avg ⟵ avg + scores[i];
end for

avg ⟵ avg / 5;
print avg;",78.7,
nested while,"int counter1 ⟵ 0;
while ( counter1 < 2 )
    int counter2 ⟵ 0;
    while ( counter2 < 3 )
        print ""Hello!"";
        counter2 ⟵ counter2 + 1;
    end while
    counter1 ⟵ counter1 + 1;
end while","Hello!
Hello!
Hello!
Hello!
Hello!
Hello!",
while 10 hello,"int counter2 ⟵ 0;
while ( counter2 < 10 )
    print ""Hello!"";
    counter2 ⟵ counter2 + 1;
end while","Hello!
Hello!
Hello!
Hello!
Hello!
Hello!
Hello!
Hello!
Hello!
Hello!",
if b print y,"boolean b ⟵ true;

if (b)
    print 'y';
end if",y,
if tracing,"int c ⟵ 5;
boolean e ⟵ false;

if (e)
    print c + 10;
    print c;
end if

e ⟵ true;

if (e)
    print c + 15;
end if",20,
if bool exp,"int c ⟵ 5;
boolean e ⟵ c < 10;

if (e)
    print c + 10;
    print c
end if

if (c == 3)
    print c + 15;
end if","15
5",
secret eq guess,"int secret_number ⟵ 13;

int guess ⟵ user_input;

print secret_number == guess;",TODO input,
if secret guess,"print ""Guess a number!""; // output a message

int secret_number ⟵ 13;
int guess ⟵ user_input;

if( secret_number == guess )
    print ""You got it!""
end if

if( secret_number != guess )
    print ""You did not get it...""
end if",TODO input,
random guess,"// get the random number
int r ⟵ random

// scale the number so it is between 1 and 100
int nf ⟵ float (r) / 6.0 * 100.0;
int n  ⟵ int (nf);

// get the guess from the user;
int guess ⟵ user_input;

// compare n to guess
if(n == guess)
    print 'y';
end if

if(n != guess)
    print 'n';
end if
","TODO input
TODO random",
if guess 5,"print ""Guess a number between 1 and 10"";
int n ⟵ user_input;

if(n == 5)
    print ""You got it!"";
else
    print ""You didn't get it."";
end if",TODO input,
if else-if else,"print ""Guess a number between 1 and 10"";
int n ⟵ user_input;

if(n == 5)
    print ""Correct!"";
else if (n == 4 or n == 6)
    print ""You're close!"";
else
    print ""Incorrect!"";
end if",TODO input,
nested if else,"print ""Guess a number between 1 and 10"";
int n ⟵ user_input;

if (n < 5)
    print ""Too low!"";
    if (n == 4)
        print ""Pretty close, though."";
    end if
else if (n > 5)
    print ""Too high!"";
    if(n == 6)
        print ""Pretty close, though.;
    end if
else
    print ""You got it!"";
end if",TODO input,
infinite loop,"int count ⟵ 0;

while ( count < 5)
    // print ""Looping!"";
end while",,"error occurred on line 3:
	This is probably an infinite loop."
while loop 5,"int count ⟵ 0;

while (count < 5 )
    print ""Looping"";
    count ⟵ count + 1;  // increment count
end while

print ""All done!"";","Looping
Looping
Looping
Looping
Looping
All done!",
do while,"int count ⟵ 0;

do
    count ⟵ count + 2;
    print ""Looping!"";
while (count < 2)",Looping!,
while false,"int count ⟵ 2;

while ( count < 2)
    print ""Loop!"";
end while",,
do while false,"int count ⟵ 2;

do
    print ""Loop!"";
while ( count < 2 )",Loop!,
guess game,"print ""Welcome to the game!"";
int answer ⟵ random;
int guesses ⟵ 0;

while (guesses <= 3)
    print ""Guess a number between 1 and 6"";
    int n ⟵ user_input;

    if(n == answer)
        print ""You got it!"";
        guesses ⟵ guesses + 10;
    else
        print ""That's not it!"";
        guesses ⟵ guesses + 1;
    end if
end while

if (n == answer)
    print ""You won!"";
    if (guesses == 10)
        print ""You got it on the first try!"";
    end if
else
    print ""You lost!"";
end if","TODO input
TODO random",
drivers license,"print ""How old are you?"";
int age = user_input;

print ""Have you completed driver's ed? Type 1 for Yes, 2 for No."";
int ed = user_input;

print ""How is your vision (rate from 1 to 5, with 5 being the best)"";
int vision = user_input;

if(age >= 16 and ed == 1 and vision > 2)
    print ""You are eligible!"";
else
    print ""You are not eligible."";
End",TODO input,
DeMorgans laws,"boolean A ← false
boolean B ← false

// These two operations always produce the same result!
print not A or B
print not A and not B

// Likewise, these two operations always produce the same result:
print not A and B
print not A or not B","true
true
false
true",
proc greet,"void greet()
    print ""Hello!"";
    print ""How are you?"";
end greet

greet()","Hello!
How are you?",
greet and main,"// procedure definition
void greet()
    print ""Hello!"";
    print ""How are you?"";
end greet

// main program
greet();
greet();
print ""Are you there?"";
greet();","Hello!
How are you?
Hello!
How are you?
Are you there?
Hello!
How are you?",
global vs local,"// procedure definition
void getRandom()
    int r ⟵ random // local variable
end getRandom

// main program
int r ⟵ 10;   // global variable
getRandom(); // call the procedure
print r;",TODO random,
not global vars,"// procedure definition
void printSum()
    int a ⟵ 10;
    int b ⟵ 15;
    print a + b;
end printSum

// main program
printSum();
print a * b; // ERROR!",25,"error occurred on line 10:
	Variable a does not exist."
capital of VA,"print ""What is the capital of Virginia?"";
print ""1: Washington 2: Richmond 3: Norfolk"";
int ans ⟵ user_input;

if ( ans == 2 )
    print ""Correct!"";
else
    print ""Incorrect"";
end if",TODO input,
ques choices,"// These things change for each question
String ques ⟵ ""What is the capital of Virginia?"";
String choices ⟵ ""1: Washington 2: Richmond 3: Norfolk"";
int correct_ans ⟵ 2;

// This code stays the same for each question
print ques;
print choices;
int ans ⟵ user_input;

if ( ans == correct_ans )
    print ""Correct!""
else
    print ""Incorrect""
end if",TODO input,
proc globals,"// procedure definition
void askQ()
    print ques;
    print choices;
    int ans ⟵ user_input;

    if ( ans == correct_ans )
        print ""Correct!""
    else
        print ""Incorrect""
    end if
end askQ

// main program
String ques ⟵ ""What is the capital of Virginia?"";
String choices ⟵ ""1: Washington 2: Richmond 3: Norfolk"";
int correct_ans ⟵ 2;

askQ();

ques ⟵ ""What is the capital of Maryland?"";
choices ⟵ ""1: Baltimore 2: D.C. 3: Annapolis"";
correct_ans ⟵ 3;

AskQ();",TODO input,
proc params,"void askQ(String ques, String choices, int correct_ans)
    print ques;
    print choices;
    int ans ⟵ user_input;

    if ( ans == correct_ans )
        print ""Correct!""
    else
        print ""Incorrect""
    end if
end askQ

askQ(""What is the capital of Virginia?"", ""1: Washington 2: Richmond 3: Norfolk"", 2);
askQ(""What is the capital of Maryland?"", ""1: Baltimore 2: D.C. 3: Annapolis"", 3);",TODO input,
proc return,"int askQ(String ques, String choices, int correct_ans)
    print ques;
    print choices;
    int ans ⟵ user_input;

    if ( ans == correct_ans )
        print ""Correct!""
        return 1;
    else
        print ""Incorrect""
        return 0;
    end if
end askQ

int score ⟵ 0;
score ⟵ score + askQ(""What is the capital of Virginia?"", ""1: Washington 2: Richmond 3: Norfolk"", 2);
score ⟵ score + askQ(""What is the capital of Maryland?"", ""1: Baltimore 2: D.C. 3: Annapolis"", 3);
print score;",TODO input,
iterative 5+5,"void askQ()
    int correct ⟵ 0;
    while ( correct == 0 )
        print ""What is 5 + 5?"";
        int ans ⟵ user_input;
        if ( ans == 10 )
            print ""Correct!"";
            correct ⟵ 1;
        else
            print ""Incorrect"";
        end if
    end while
end askQ",TODO input,
recursive 5+5,"void askQ()
    print ""What is 5 + 5?"";
    int ans ⟵ user_input;
    if ( ans == 10 )
        print ""Correct!"";
    else
        print ""Incorrect"";
        askQ(); // recursive call
    end if
end askQ",TODO input,
factorial,"int factorial(int n)
    if (n == 1)
        return 1
    else
        return n * factorial(n - 1)
    end if
end factorial

print factorial(5)",120,
algorithm max,"int[] array ← {3, 5, 1, 2}
int arrayLength ← 4

int max ← array[0]
for (int i ← 0; i < arrayLength; i ← i + 1)
    int current ← array[i]
    if (current > max)
        max ← current
    end if
end for

print max",5,
linear search,"int linearSearch( String [] arr, int arrLength, String target )
    for ( int j ← 0; j < arrLength; j ← j + 1 )
        String val ← arr[j]
        if ( val == target )	// found!
            return j
        end if
    end for
    return -1	// not found
end linearSearch",TODO call proc,
binary search,"int binarySearch( String [] arr, int arrLength; String target )
    int lower ← 0			// lower and upper indices define range
    int upper ← arrLength - 1
    while ( lower < upper )
        int middle ← (lower+upper) / 2		// middle index in range
        String val ← arr[middle]
        if ( target > current )		// adjust range for next iteration
            lower ← middle + 1
        else
            if ( target < current )
                    upper ← middle - 1
            else // target == current	// item found!
                    return middle
            end if
        end if
    end while
    return -1			// item not found
end binarySearch",TODO call proc,
insertion sort,"int insertionSort( String [] arr, int length )
     for ( int j ← 1; j < length; j ← j + 1 )
          String val ← arr[j]	// new item to be inserted
          int k ← j - 1
          while ( k ≥ 0 and arr[k] > val )	// shift previously sorted items
               arr[k + 1] ← arr[k]
               k ← k - 1
          end while
          arr[k + 1] ← val		// insert new item
     end for
end insertionSort",TODO call proc,
selection sort,"int selectionSort( String [] arr, int length )
     for ( int j ← 0; j < length; j ← j + 1 )
          int min ← j
          for ( int k ← j + 1; k < length; k ← k + 1 )	// find minimum
               if (arr[k] < arr[min])
                    min ← k
          end for
          String temp ← arr[j]	// swap
          arr[j] ← arr[min]
          arr[min] ← temp
     end for
end selectionSort",TODO call proc,
assign 10,"int data ⟵ 10;
print data",10,
print 1010,"print 10; // no line feed after
print 10; // line feed after",1010,
no line feed,"print 100; // no line feed
print 200; // no line feed
print 300; // no line feed",100200300,
how old are you,"print ""How old are you?""; // line feed after

int answer ⟵ user_input;

print ""You said you were ""; // no line feed
print answer;
print "" years old. Thanks!""; // line feed after",TODO input,
print counter,"int counter ⟵ 0;
print counter;

counter ⟵ counter + 1;
print counter;","0
1",
int division,"int result ⟵ 7 / 2;
print result;",3,
float division,"float result ⟵ 7.0 / 2.0;
print result;",3.5,
one third whole,"float one_third ← 1.0 / 3.0;
print one_third;

float whole ← one_third * 3;
print whole;","0.3333333333333333
1.0",
float remainder,"float result ⟵ 6.0 % 4.2;
print result;",1.7999999999999998,
age in days int,"int age ⟵ user_input; // get the int from the user
float f_age = float (age); // cast age as a float

// finally, cast the result as an int
int age_in_days = int (f_age * 365.25);
print age_in_days",TODO input,
age in days float,"print ""How old are you?"";

int age ⟵ user_input;

print ""You are approximately "";
print float(age) * 365.25;
print "" days old!""",TODO input,
